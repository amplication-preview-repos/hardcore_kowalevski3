/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { StringFilter } from "../../util/StringFilter";
import { Type } from "class-transformer";
import { IsOptional, IsEnum, ValidateNested } from "class-validator";
import { EnumCollaboratorSeniority } from "./EnumCollaboratorSeniority";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { SkillLevelListRelationFilter } from "../../skillLevel/base/SkillLevelListRelationFilter";
import { VisualizationListRelationFilter } from "../../visualization/base/VisualizationListRelationFilter";

@InputType()
class CollaboratorWhereInput {
  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    enum: EnumCollaboratorSeniority,
  })
  @IsEnum(EnumCollaboratorSeniority)
  @IsOptional()
  @Field(() => EnumCollaboratorSeniority, {
    nullable: true,
  })
  seniority?: "Option1";

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  lastname?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  firstname?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => SkillLevelListRelationFilter,
  })
  @ValidateNested()
  @Type(() => SkillLevelListRelationFilter)
  @IsOptional()
  @Field(() => SkillLevelListRelationFilter, {
    nullable: true,
  })
  skillLevels?: SkillLevelListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => VisualizationListRelationFilter,
  })
  @ValidateNested()
  @Type(() => VisualizationListRelationFilter)
  @IsOptional()
  @Field(() => VisualizationListRelationFilter, {
    nullable: true,
  })
  visualizations?: VisualizationListRelationFilter;
}

export { CollaboratorWhereInput as CollaboratorWhereInput };
